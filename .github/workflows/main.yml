name: Grocery App

on:
  push:
  pull_request:
    branches: master

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   name: Tests
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Cache dependencies
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: ~/.composer/cache/files
  #         key: dependencies-composer-${{ hashFiles('composer.json') }}

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: 7.3
  #         extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
  #         coverage: none

  #     - name: Copy ENV Laravel Configuration for CI
  #       run: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #     - name: Install Dependencies (PHP vendors)
  #       run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
  #     - name: Generate key
  #       run: php artisan key:generate

  #     - name: Execute tests
  #       run: vendor/bin/phpunit --verbose
        
  # js-tests:
  #       runs-on: ubuntu-latest
       
  #       strategy:
  #         matrix:
  #           node-version: [12.x]        

  #       steps:
  #           -   name: Checkout code
  #               uses: actions/checkout@v2
  #           -   name: Prepare Node
  #               uses: actions/setup-node@v1
  #               with:
  #                node-version: ${{ matrix.node-version }}
  #           - name: Cache Node.js modules
  #             uses: actions/cache@v1.1.2
  #             with:
  #               path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
  #               key: -node-${{ hashFiles('**/package-lock.json') }}

  #           - name: Install NPM dependencies
  #             run: npm install

            # -   name: Compile assets
            #     run: npm run production                

  push-to-server:

    runs-on: ubuntu-latest
    # needs: [tests, js-tests]
    steps:
    - uses: actions/checkout@v1

    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        PORT: 22
      with:
        source: "."
        target: "/var/www/grocery"

    # RUN ONLY THE FIRST TIME
    # - name: Executing remote  command
    #   uses: appleboy/ssh-action@master
    #   with:
    #    host: ${{ secrets.HOST }}
    #    USERNAME: ${{ secrets.USERNAME }}
    #    PASSWORD: ${{ secrets.PASSWORD }}
    #    PORT: 22
    #    script: |
    #     cd /var/www/grocery
    #     cp .env.prod .env
    #     composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    #     php artisan key:generate
    #     php artisan optimize:clear
    #     chmod -R 777 storage/
    #     chmod -R 777 bootstrap/cache/
    #     php artisan storage:link
    #     php artisan migrate:fresh --seed --force --no-interaction




    # RUN SEBSEQUENTLY
    - name: Executing remote  command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        PORT: 22
        script: |
        cd /var/www/grocery
        chmod -R 777 storage/
        chmod -R 777 bootstrap/cache/
        php artisan migrate:fresh --seed --force --no-interaction
